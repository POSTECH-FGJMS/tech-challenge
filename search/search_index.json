{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"O problema","text":"<p>H\u00e1 uma lanchonete de bairro que est\u00e1 expandindo devido seu grande sucesso. Por\u00e9m, com a expans\u00e3o e sem um sistema de controle de pedidos, o atendimento aos clientes pode ser ca\u00f3tico e confuso. Por exemplo, imagine que um cliente fa\u00e7a um pedido complexo, como um hamb\u00farguer personalizado com ingredientes espec\u00edficos, acompanhado de batatas fritas e uma bebida. O atendente pode anotar o pedido em um papel e entreg\u00e1-lo \u00e0 cozinha, mas n\u00e3o h\u00e1 garantia de que o pedido ser\u00e1 preparado corretamente.</p> <p>Sem um sistema de controle de pedidos, pode haver confus\u00e3o entre os atendentes e a cozinha, resultando em atrasos na prepara\u00e7\u00e3o e entrega dos pedidos. Os pedidos podem ser perdidos, mal interpretados ou esquecidos, levando \u00e0 insatisfa\u00e7\u00e3o dos clientes e a perda de neg\u00f3cios.</p> <p>Em resumo, um sistema de controle de pedidos \u00e9 essencial para garantir que a lanchonete possa atender os clientes de maneira eficiente, gerenciando seus pedidos e estoques de forma adequada. Sem ele, expandir a lanchonete pode acabar n\u00e3o dando certo, resultando em clientes insatisfeitos e impactando os neg\u00f3cios de forma negativa.</p> <p>Para solucionar o problema, a lanchonete ir\u00e1 investir em um sistema de autoatendimento de fast food, que \u00e9 composto por uma s\u00e9rie de dispositivos e interfaces que permitem aos clientes selecionar e fazer pedidos sem precisar interagir com um atendente, com as seguintes funcionalidades:</p>"},{"location":"#pedido","title":"Pedido","text":"<p>Os clientes s\u00e3o apresentados a uma interface de sele\u00e7\u00e3o na qual podem optar por se identificarem via CPF, se cadastrarem com nome, e-mail ou n\u00e3o se identificar, podendo montar o combo na seguinte sequ\u00eancia, sendo todas elas opcionais:</p> <ol> <li>Lanche</li> <li>Acompanhamento</li> <li>Bebida</li> </ol> <p>Em cada etapa \u00e9 exibido o nome, descri\u00e7\u00e3o e pre\u00e7o de cada produto.</p>"},{"location":"#pagamento","title":"Pagamento","text":"<p>O sistema dever\u00e1 possuir uma op\u00e7\u00e3o de pagamento integrada para MVP. A forma de pagamento oferecida ser\u00e1 via QRCode do Mercado Pago.</p>"},{"location":"#acompanhamento","title":"Acompanhamento","text":"<p>Uma vez que o pedido \u00e9 confirmado e pago, ele \u00e9 enviado para a cozinha para ser preparado. Simultaneamente deve aparecer em um monitor para o cliente acompanhar o progresso do seu pedido com as seguintes etapas:</p> <ol> <li>Recebido</li> <li>Em prepara\u00e7\u00e3o</li> <li>Pronto</li> <li>Finalizado</li> </ol>"},{"location":"#entrega","title":"Entrega","text":"<p>Quando o pedido estiver pronto, o sistema dever\u00e1 notificar o cliente que ele est\u00e1 pronto para retirada. Ao ser retirado, o pedido deve ser atualizado para o status finalizado.</p>"},{"location":"#acesso-administrativo","title":"Acesso administrativo","text":"<p>Al\u00e9m das etapas do cliente, o estabelecimento precisa de um acesso administrativo:</p>"},{"location":"#gerenciar-clientes","title":"Gerenciar clientes","text":"<p>Com a identifica\u00e7\u00e3o dos clientes o estabelecimento pode trabalhar em campanhas promocionais.</p>"},{"location":"#gerenciar-produtos-e-categorias","title":"Gerenciar produtos e categorias:","text":"<p>Os produtos dispostos para escolha do cliente ser\u00e3o gerenciados pelo estabelecimento, definindo nome, categoria, pre\u00e7o, descri\u00e7\u00e3o e imagens. Para esse sistema teremos categorias fixas:</p> <ol> <li>Lanche</li> <li>Acompanhamento</li> <li>Bebida</li> <li>Sobremesa</li> </ol>"},{"location":"#painel-de-acompanhamento-de-pedidos","title":"Painel de acompanhamento de pedidos:","text":"<p>Deve ser poss\u00edvel acompanhar os pedidos em andamento e tempo de espera de cada pedido.</p> <p>As informa\u00e7\u00f5es dispostas no sistema de pedidos precisar\u00e3o ser gerenciadas pelo estabelecimento atrav\u00e9s de um painel administrativo.</p>"},{"location":"fase-1/","title":"Entrega","text":"<p>A aplica\u00e7\u00e3o deve ser entregue com um Dockerfile configurado para execut\u00e1-la corretamente.</p> <ul> <li>Aplica\u00e7\u00e3o dever\u00e1 ser escal\u00e1vel para atender grandes volumes nos hor\u00e1rios de pico</li> <li>Banco de dados a sua escolha</li> <li>Inicialmente deveremos trabalhar e organizar a fila dos pedidos apenas em banco de dados</li> <li>N\u00e3o ser\u00e1 necess\u00e1rio o desenvolvimento de interfaces para o frontend, o foco deve ser total no backend.</li> </ul> <p>Para valida\u00e7\u00e3o da POC, temos a seguinte limita\u00e7\u00e3o de infraestrutura:</p> <ul> <li>1 inst\u00e2ncia para banco de dados</li> <li>1 inst\u00e2ncia para executar aplica\u00e7\u00e3o</li> </ul>"},{"location":"fase-1/#documentacao","title":"Documenta\u00e7\u00e3o","text":"<p>utilizar linguagem ub\u00edqua para documentar os seguintes fluxos:</p> <ol> <li>Realiza\u00e7\u00e3o do pedido e pagamento</li> <li>Prepara\u00e7\u00e3o e entrega do pedido</li> </ol>"},{"location":"fase-1/#api","title":"API","text":"<p>Uma aplica\u00e7\u00e3o para todo sistema de backend (monolito) que dever\u00e1 ser desenvolvido seguindo os padr\u00f5es apresentados nas aulas e utilizando arquitetura hexagonal.</p> <p>Endpoints:</p> <ol> <li>Cadastro do Cliente</li> <li>Identifica\u00e7\u00e3o do Cliente via CPF</li> <li>Criar, editar e remover de produto</li> <li>Buscar produtos por categoria</li> <li>Fake checkout: apenas enviar os produtos escolhidos para a fila</li> <li>Listagem dos pedidos</li> </ol>"},{"location":"fase-1/fluxo-entrega/","title":"Prepara\u00e7\u00e3o e entrega do pedido","text":"<pre><code>graph TD;\nA--&gt;B;\nA--&gt;C;\nB--&gt;D;\nC--&gt;D;\n</code></pre>"},{"location":"fase-1/fluxo-pedido-pagamento/","title":"Realiza\u00e7\u00e3o do pedido e pagamento","text":"<pre><code>graph TD;\nA--&gt;B;\nA--&gt;C;\nB--&gt;D;\nC--&gt;D;\n</code></pre>"}]}